{"ast":null,"code":"import axios from 'axios';\nimport Global from '../Global';\nconst apiClient = axios.create({\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true\n});\nexport default {\n  name: 'ProductPage',\n  mounted() {\n    this.getProductos();\n  },\n  data() {\n    return {\n      url: Global.url,\n      products: {}\n    };\n  },\n  methods: {\n    getProductos() {\n      apiClient.get(this.url + 'Product/products').then(res => {\n        if (res.data.status == 'success') {\n          this.products = res.data.products;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    async orderProduct(id, event) {\n      event.preventDefault();\n      try {\n        let data = this.$refs['input-' + id][0].value;\n        if (data > 0 || isNaN(data)) {\n          const response = await axios.get(`${this.url}User/user`, {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            withCredentials: true\n          });\n          const content = response.data;\n          const order = {\n            idUser: content._id,\n            idProduct: id,\n            amount: data\n          };\n          const result = await apiClient.post(this.url + 'Order/save', order);\n          if (result.data.status == 'success') {\n            alert('Order realizada');\n            this.$refs['input-' + id][0].value = '';\n          }\n        }\n      } catch (err) {\n        alert('Error al realizar el pedido');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Global","apiClient","create","headers","withCredentials","name","mounted","getProductos","data","url","products","methods","get","then","res","status","catch","err","console","log","orderProduct","id","event","preventDefault","$refs","value","isNaN","response","content","order","idUser","_id","idProduct","amount","result","post","alert"],"sources":["D:\\VScode\\WebProject\\web-project\\src\\views\\ProductPage.vue"],"sourcesContent":["<template>\r\n    <h1>Productos</h1>\r\n    <div class=\"grid-container\">\r\n        <div class=\"card\" v-for=\"product in products\" :key=\"product._id\">\r\n            <h2>{{ product.name }}</h2>\r\n            <p>Precio: ${{ product.price }}</p>\r\n            <input type=\"number\" :ref=\"'input-'+product._id\">\r\n            <button @click=\"orderProduct(product._id, $event)\">Order</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped src=\"@/assets/css/ProductStyle.css\"></style>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Global from '../Global'\r\n\r\nconst apiClient = axios.create({\r\n  headers: { 'Content-Type': 'application/json' },\r\n  withCredentials: true,\r\n});\r\n\r\nexport default {\r\n    name: 'ProductPage',\r\n\r\n    mounted(){\r\n        this.getProductos();\r\n    },\r\n    data(){\r\n        return {\r\n            url: Global.url,\r\n            products: {},\r\n        }\r\n    },\r\n    methods: {\r\n        getProductos(){\r\n            apiClient.get(this.url+'Product/products')\r\n                .then(res => {\r\n                    if(res.data.status == 'success'){\r\n                        this.products = res.data.products;\r\n                    }\r\n                })\r\n                .catch (err => {\r\n                    console.log(err)\r\n                })\r\n            },\r\n        async orderProduct(id, event) {\r\n            event.preventDefault();\r\n            try {\r\n            let data = this.$refs['input-'+id][0].value;\r\n            if (data > 0 || isNaN(data)){\r\n                const response = await axios.get(`${this.url}User/user`, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    withCredentials: true\r\n                });\r\n                const content = response.data;\r\n                \r\n                const order = {\r\n                    idUser: content._id,\r\n                    idProduct: id,\r\n                    amount: data\r\n                }\r\n\r\n                const result = await apiClient.post(this.url+'Order/save',order)\r\n                if(result.data.status == 'success'){\r\n                    alert('Order realizada');\r\n                    this.$refs['input-'+id][0].value = '';\r\n                }\r\n            }\r\n            } catch (err){\r\n                alert('Error al realizar el pedido');\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":"AAeA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,WAAU;AAE7B,MAAMC,SAAQ,GAAIF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB,CAAC;EAC/CC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEF,eAAe;EACXC,IAAI,EAAE,aAAa;EAEnBC,OAAOA,CAAA,EAAE;IACL,IAAI,CAACC,YAAY,CAAC,CAAC;EACvB,CAAC;EACDC,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,GAAG,EAAET,MAAM,CAACS,GAAG;MACfC,QAAQ,EAAE,CAAC;IACf;EACJ,CAAC;EACDC,OAAO,EAAE;IACLJ,YAAYA,CAAA,EAAE;MACVN,SAAS,CAACW,GAAG,CAAC,IAAI,CAACH,GAAG,GAAC,kBAAkB,EACpCI,IAAI,CAACC,GAAE,IAAK;QACT,IAAGA,GAAG,CAACN,IAAI,CAACO,MAAK,IAAK,SAAS,EAAC;UAC5B,IAAI,CAACL,QAAO,GAAII,GAAG,CAACN,IAAI,CAACE,QAAQ;QACrC;MACJ,CAAC,EACAM,KAAI,CAAGC,GAAE,IAAK;QACXC,OAAO,CAACC,GAAG,CAACF,GAAG;MACnB,CAAC;IACL,CAAC;IACL,MAAMG,YAAYA,CAACC,EAAE,EAAEC,KAAK,EAAE;MAC1BA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtB,IAAI;QACJ,IAAIf,IAAG,GAAI,IAAI,CAACgB,KAAK,CAAC,QAAQ,GAACH,EAAE,CAAC,CAAC,CAAC,CAAC,CAACI,KAAK;QAC3C,IAAIjB,IAAG,GAAI,KAAKkB,KAAK,CAAClB,IAAI,CAAC,EAAC;UACxB,MAAMmB,QAAO,GAAI,MAAM5B,KAAK,CAACa,GAAG,CAAE,GAAE,IAAI,CAACH,GAAI,WAAU,EAAE;YACrDN,OAAO,EAAE;cAAE,cAAc,EAAE;YAAmB,CAAC;YAC/CC,eAAe,EAAE;UACrB,CAAC,CAAC;UACF,MAAMwB,OAAM,GAAID,QAAQ,CAACnB,IAAI;UAE7B,MAAMqB,KAAI,GAAI;YACVC,MAAM,EAAEF,OAAO,CAACG,GAAG;YACnBC,SAAS,EAAEX,EAAE;YACbY,MAAM,EAAEzB;UACZ;UAEA,MAAM0B,MAAK,GAAI,MAAMjC,SAAS,CAACkC,IAAI,CAAC,IAAI,CAAC1B,GAAG,GAAC,YAAY,EAACoB,KAAK;UAC/D,IAAGK,MAAM,CAAC1B,IAAI,CAACO,MAAK,IAAK,SAAS,EAAC;YAC/BqB,KAAK,CAAC,iBAAiB,CAAC;YACxB,IAAI,CAACZ,KAAK,CAAC,QAAQ,GAACH,EAAE,CAAC,CAAC,CAAC,CAAC,CAACI,KAAI,GAAI,EAAE;UACzC;QACJ;MACA,EAAE,OAAOR,GAAG,EAAC;QACTmB,KAAK,CAAC,6BAA6B,CAAC;MACxC;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}