{"ast":null,"code":"import axios from 'axios';\nimport Global from '@/Global';\nconst apiClient = axios.create({\n  withCredentials: true\n});\nexport default {\n  name: \"ReportPage\",\n  data() {\n    return {\n      url: Global.url,\n      invoices: [],\n      products: [],\n      inputValue: '',\n      tabSelected: 'invoices'\n    };\n  },\n  methods: {\n    async getAllInvoices() {\n      try {\n        const response = await apiClient.get(this.url + 'Report/InvoicesWithDistrict');\n        this.invoices = response.data;\n        this.tabSelected = 'invoices';\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    },\n    async FindProductsByDistrict() {\n      try {\n        const response = await apiClient.get(this.url + 'Report/InvoicesLocation/' + this.inputValue);\n        this.products = response.data;\n        this.tabSelected = 'products';\n      } catch (error) {\n        console.error('Error', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Global","apiClient","create","withCredentials","name","data","url","invoices","products","inputValue","tabSelected","methods","getAllInvoices","response","get","error","console","FindProductsByDistrict"],"sources":["D:\\VS Code\\WebProject\\web-project\\src\\views\\ReportPage.vue"],"sourcesContent":["<template>\r\n    <button @click=\"getAllInvoices\">Obtener facturas</button>\r\n    <button @click=\"FindProductsByDistrict\">Listar productos por distrito</button>\r\n    <input v-model=\"inputValue\">\r\n\r\n    <!-- Invoices Template -->\r\n    <div v-if=\"tabSelected === 'invoices'\">\r\n        <h2>Facturas</h2>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Fecha</th>\r\n                    <th>Total</th>\r\n                    <th>Distrito</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"invoice in invoices\" :key=\"invoice.id\">\r\n                    <td>{{ invoice.date }}</td>\r\n                    <td>{{ invoice.totalValue }}</td>\r\n                    <td>{{ invoice.district }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n    <!-- Products Template -->\r\n    <div v-if=\"tabSelected === 'products'\">\r\n        <h2>Productos</h2>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Nombre</th>\r\n                    <th>Precio</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"product in products\" :key=\"product.id\">\r\n                    <td>{{ product.name }}</td>\r\n                    <td>{{ product.price }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<style scoped src=\"@/assets/css/AdminProductStyle.css\"></style>\r\n \r\n<script>\r\nimport axios from 'axios';\r\nimport Global from '@/Global';\r\n\r\nconst apiClient = axios.create({\r\nwithCredentials: true,\r\n});\r\n \r\n export default {\r\n  name: \"ReportPage\",\r\n  data() {\r\n     return {\r\n       url: Global.url,\r\n       invoices: [],\r\n       products: [],\r\n       inputValue: '',\r\n       tabSelected: 'invoices',\r\n     };\r\n  },\r\n  methods: {\r\n    async getAllInvoices() {\r\n        try {\r\n            const response = await apiClient.get(this.url+'Report/InvoicesWithDistrict');\r\n            this.invoices = response.data;\r\n            this.tabSelected = 'invoices'\r\n        } catch (error) {\r\n            console.error('Error fetching products:', error);\r\n        }\r\n    },\r\n    async FindProductsByDistrict(){\r\n        try {\r\n            const response = await apiClient.get(this.url+'Report/InvoicesLocation/'+this.inputValue);\r\n            this.products = response.data;\r\n            this.tabSelected = 'products'\r\n        } catch (error) {\r\n            console.error('Error', error);\r\n        }\r\n    },\r\n  },\r\n\r\n };\r\n</script>\r\n"],"mappings":"AAiDA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,UAAU;AAE7B,MAAMC,SAAQ,GAAIF,KAAK,CAACG,MAAM,CAAC;EAC/BC,eAAe,EAAE;AACjB,CAAC,CAAC;AAED,eAAe;EACdC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACJ,OAAO;MACLC,GAAG,EAAEN,MAAM,CAACM,GAAG;MACfC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE;IACf,CAAC;EACJ,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACnB,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMZ,SAAS,CAACa,GAAG,CAAC,IAAI,CAACR,GAAG,GAAC,6BAA6B,CAAC;QAC5E,IAAI,CAACC,QAAO,GAAIM,QAAQ,CAACR,IAAI;QAC7B,IAAI,CAACK,WAAU,GAAI,UAAS;MAChC,EAAE,OAAOK,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IACD,MAAME,sBAAsBA,CAAA,EAAE;MAC1B,IAAI;QACA,MAAMJ,QAAO,GAAI,MAAMZ,SAAS,CAACa,GAAG,CAAC,IAAI,CAACR,GAAG,GAAC,0BAA0B,GAAC,IAAI,CAACG,UAAU,CAAC;QACzF,IAAI,CAACD,QAAO,GAAIK,QAAQ,CAACR,IAAI;QAC7B,IAAI,CAACK,WAAU,GAAI,UAAS;MAChC,EAAE,OAAOK,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;MACjC;IACJ;EACF;AAED,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}