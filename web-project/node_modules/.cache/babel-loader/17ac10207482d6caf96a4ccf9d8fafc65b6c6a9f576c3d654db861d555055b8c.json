{"ast":null,"code":"import { computed } from 'vue';\nimport { useStore } from 'vuex';\nimport axios from 'axios';\nimport Global from '@/Global';\nexport default {\n  name: 'HeaderLoginPage',\n  setup() {\n    const url = Global.url;\n    const store = useStore();\n    const auth = computed(() => store.state.authenticated);\n    const logout = async () => {\n      try {\n        await axios.post(`${url}logout`, null, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n\n        // Actualizar el estado de autenticación después del cierre de sesión\n        await store.dispatch('setAuth', false);\n      } catch (err) {\n        console.error('Error al cerrar sesión:', err);\n      }\n    };\n    return {\n      auth,\n      logout\n    };\n  }\n};","map":{"version":3,"names":["computed","useStore","axios","Global","name","setup","url","store","auth","state","authenticated","logout","post","headers","withCredentials","dispatch","err","console","error"],"sources":["D:\\VS Code\\WebProject\\web-project\\src\\components\\HeaderLoginPage.vue"],"sourcesContent":["<template>\r\n    <body>\r\n    <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\" href=\"/\">Home</a>\r\n\r\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav\" v-if=\"!auth\">\r\n              <li class=\"nav-item\">\r\n                <RouterLink to=\"/login\" class=\"nav-link\">Login</RouterLink>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <RouterLink to=\"/register\" class=\"nav-link\">Register</RouterLink>\r\n              </li>\r\n            </ul>\r\n\r\n            <ul class=\"navbar-nav\" v-if=\"auth\">\r\n              <li class=\"nav-item\">\r\n                <RouterLink to=\"/login\" class=\"nav-link\" @click=\"logout\">Logout</RouterLink>\r\n              </li>\r\n            </ul>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n  </body>\r\n</template>\r\n\r\n<script>\r\nimport { computed } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport axios from 'axios';\r\nimport Global from '@/Global';\r\n\r\nexport default {\r\n  name: 'HeaderLoginPage',\r\n  setup() {\r\n    const url = Global.url;\r\n    const store = useStore();\r\n\r\n    const auth = computed(() => store.state.authenticated);\r\n\r\n    const logout = async () => {\r\n      try {\r\n        await axios.post(`${url}logout`, null, {\r\n          headers: { 'Content-Type': 'application/json' },\r\n          withCredentials: true\r\n        });\r\n\r\n        // Actualizar el estado de autenticación después del cierre de sesión\r\n        await store.dispatch('setAuth', false);\r\n      } catch (err) {\r\n        console.error('Error al cerrar sesión:', err);\r\n      }\r\n    };\r\n\r\n    return {\r\n      auth,\r\n      logout\r\n    };\r\n  }\r\n};\r\n</script>"],"mappings":"AAiCA,SAASA,QAAO,QAAS,KAAK;AAC9B,SAASC,QAAO,QAAS,MAAM;AAC/B,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,UAAU;AAE7B,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAKA,CAAA,EAAG;IACN,MAAMC,GAAE,GAAIH,MAAM,CAACG,GAAG;IACtB,MAAMC,KAAI,GAAIN,QAAQ,CAAC,CAAC;IAExB,MAAMO,IAAG,GAAIR,QAAQ,CAAC,MAAMO,KAAK,CAACE,KAAK,CAACC,aAAa,CAAC;IAEtD,MAAMC,MAAK,GAAI,MAAAA,CAAA,KAAY;MACzB,IAAI;QACF,MAAMT,KAAK,CAACU,IAAI,CAAE,GAAEN,GAAI,QAAO,EAAE,IAAI,EAAE;UACrCO,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,eAAe,EAAE;QACnB,CAAC,CAAC;;QAEF;QACA,MAAMP,KAAK,CAACQ,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC;MACxC,EAAE,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;MAC/C;IACF,CAAC;IAED,OAAO;MACLR,IAAI;MACJG;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}