{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4aae6cd4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Productos\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"grid-container\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", null, \"Order\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredProducts, product => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"card\",\n      key: product._id\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(product.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Precio: $\" + _toDisplayString(product.price), 1 /* TEXT */), _hoisted_3]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_hoisted_1","_hoisted_2","_createElementBlock","_Fragment","_renderList","$setup","filteredProducts","product","key","_id","_toDisplayString","name","price","_hoisted_3"],"sources":["D:\\VS Code\\WebProject\\web-project\\src\\views\\ProductPage.vue"],"sourcesContent":["<template>\r\n    <h1>Productos</h1>\r\n    <div class=\"grid-container\">\r\n        <div class=\"card\" v-for=\"product in filteredProducts\" :key=\"product._id\">\r\n            <h2>{{ product.name }}</h2>\r\n            <p>Precio: ${{ product.price }}</p>\r\n            <button>Order</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped src=\"@/assets/css/ProductStyle.css\"></style>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Global from '../Global'\r\nimport {computed} from 'vue';\r\nimport {useStore} from 'vuex';\r\n\r\nexport default {\r\n    name: 'ProductPage',\r\n    setup() {\r\n        const store = useStore(); \r\n\r\n        const products = computed(() => store.state.products);\r\n        const searchQuery = computed(() => store.getters.searchQuery);\r\n\r\n        const filteredProducts = computed(() => {\r\n          if (!searchQuery.value) {\r\n            return products.value;\r\n          }\r\n          return products.value.filter((product) =>\r\n            product.name.toLowerCase().includes(searchQuery.value.toLowerCase())\r\n          );\r\n        });\r\n\r\n        return {\r\n          products,\r\n          searchQuery,\r\n          filteredProducts,\r\n        }\r\n    },\r\n    methods: {\r\n        getProducots(){\r\n            const url = Global.url;\r\n            axios.get(url+'/Product/products')\r\n                .then(res => {\r\n                    if(res.data.status == 'success'){\r\n                        this.$store.commit('updateProducts', res.data.data)\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    },\r\n    created() {\r\n        this.getProductos();\r\n    }\r\n}\r\n</script>\r\n"],"mappings":";;gEACIA,mBAAA,CAAkB,YAAd,WAAS;;EACRC,KAAK,EAAC;AAAgB;gEAInBD,mBAAA,CAAsB,gBAAd,OAAK;;;6DALrBE,UAAkB,EAClBF,mBAAA,CAMM,OANNG,UAMM,I,kBALFC,mBAAA,CAIMC,SAAA,QAAAC,WAAA,CAJ8BC,MAAA,CAAAC,gBAAgB,EAA3BC,OAAO;yBAAhCL,mBAAA,CAIM;MAJDH,KAAK,EAAC,MAAM;MAAsCS,GAAG,EAAED,OAAO,CAACE;QAChEX,mBAAA,CAA2B,YAAAY,gBAAA,CAApBH,OAAO,CAACI,IAAI,kBACnBb,mBAAA,CAAmC,WAAhC,WAAS,GAAAY,gBAAA,CAAGH,OAAO,CAACK,KAAK,kBAC5BC,UAAsB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}