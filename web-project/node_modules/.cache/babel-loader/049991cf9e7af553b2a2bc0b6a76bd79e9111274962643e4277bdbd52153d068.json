{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0c9bfa1d\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Facturas\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Fecha\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Total\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Distrito\")])], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.getAllInvoices && $options.getAllInvoices(...args))\n  }, \"Obtener facturas\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.FindProductsByDistrict && $options.FindProductsByDistrict(...args))\n  }, \"Listar productos por distrito\"), _createCommentVNode(\" Invoices Template \"), $data.invoices.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", null, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.invoices, invoice => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: invoice.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(invoice.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(invoice.totalValue), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(invoice.district)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","onClick","_cache","args","$options","getAllInvoices","FindProductsByDistrict","_createCommentVNode","$data","invoices","length","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","invoice","key","id","_toDisplayString","date","totalValue","formatDate","district"],"sources":["D:\\VS Code\\WebProject\\web-project\\src\\views\\ReportPage.vue"],"sourcesContent":["<template>\r\n    <button @click=\"getAllInvoices\">Obtener facturas</button>\r\n    <button @click=\"FindProductsByDistrict\">Listar productos por distrito</button>\r\n\r\n    <!-- Invoices Template -->\r\n    <div v-if=\"invoices.length > 0\">\r\n        <h2>Facturas</h2>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Fecha</th>\r\n                    <th>Total</th>\r\n                    <th>Distrito</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"invoice in invoices\" :key=\"invoice.id\">\r\n                    <td>{{ invoice.date }}</td>\r\n                    <td>{{ invoice.totalValue }}</td>\r\n                    <td>{{ formatDate(invoice.district) }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<style scoped src=\"@/assets/css/AdminProductStyle.css\"></style>\r\n \r\n<script>\r\nimport axios from 'axios';\r\nimport Global from '@/Global';\r\nimport moment from 'moment';\r\n\r\nconst apiClient = axios.create({\r\nwithCredentials: true,\r\n});\r\n \r\n export default {\r\n  name: \"ReportPage\",\r\n  data() {\r\n     return {\r\n       url: Global.url,\r\n       invoices: [],\r\n     };\r\n  },\r\n  methods: {\r\n    async getAllInvoices() {\r\n        try {\r\n            const response = await apiClient.get(this.url+'Report/InvoicesWithDistrict');\r\n            this.invoices = response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching products:', error);\r\n        }\r\n    },\r\n    async FindProductsByDistrict(){\r\n        try {\r\n            const response = await apiClient.get(this.url+'Report/InvoicesLocation/');\r\n            this.invoices = response.data;\r\n        } catch (error) {\r\n            console.error('Error', error);\r\n        }\r\n    },\r\n    formatDate(date) {\r\n        return moment(date).format('DD/MM/YYYY');\r\n    }\r\n  },\r\n\r\n };\r\n</script>\r\n"],"mappings":";;;;;gEAMQA,mBAAA,CAAiB,YAAb,UAAQ;gEAERA,mBAAA,CAMQ,gB,aALJA,mBAAA,CAIK,a,aAHDA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAiB,YAAb,UAAQ,E;;;6DAX5BA,mBAAA,CAAyD;IAAhDC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAE,kBAAgB,GAChDH,mBAAA,CAA8E;IAArEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,sBAAA,IAAAF,QAAA,CAAAE,sBAAA,IAAAH,IAAA,CAAsB;KAAE,+BAA6B,GAErEI,mBAAA,uBAA0B,EACfC,KAAA,CAAAC,QAAQ,CAACC,MAAM,Q,cAA1BC,mBAAA,CAkBM,OAAAC,UAAA,GAjBFC,UAAiB,EACjBb,mBAAA,CAeQ,gBAdJc,UAMQ,EACRd,mBAAA,CAMQ,iB,kBALJW,mBAAA,CAIKI,SAAA,QAAAC,WAAA,CAJiBR,KAAA,CAAAC,QAAQ,EAAnBQ,OAAO;yBAAlBN,mBAAA,CAIK;MAJ4BO,GAAG,EAAED,OAAO,CAACE;QAC1CnB,mBAAA,CAA2B,YAAAoB,gBAAA,CAApBH,OAAO,CAACI,IAAI,kBACnBrB,mBAAA,CAAiC,YAAAoB,gBAAA,CAA1BH,OAAO,CAACK,UAAU,kBACzBtB,mBAAA,CAA2C,YAAAoB,gBAAA,CAApChB,QAAA,CAAAmB,UAAU,CAACN,OAAO,CAACO,QAAQ,kB"},"metadata":{},"sourceType":"module","externalDependencies":[]}