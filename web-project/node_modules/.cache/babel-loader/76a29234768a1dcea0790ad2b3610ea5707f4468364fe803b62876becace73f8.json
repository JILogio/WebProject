{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport Global from '@/Global';\nconst apiClient = axios.create({\n  withCredentials: true\n});\nexport default {\n  name: \"UpdateUser\",\n  props: ['id'],\n  data() {\n    return {\n      url: Global.url,\n      users: {}\n    };\n  },\n  created() {\n    this.fetchUser();\n  },\n  methods: {\n    async fetchUser() {\n      try {\n        const response = await apiClient.get(this.url + 'User/search?search=' + this.id);\n        if (response.data.status == 'success') {\n          this.users = response.data.user;\n        }\n      } catch (error) {\n        console.error('Error fetching user:', error);\n      }\n    },\n    async updateUser() {\n      try {\n        const gou = this.users.map(item => {\n          return {\n            name: item.name,\n            email: item.email,\n            role: item.role,\n            password: item.password\n          };\n        });\n        const filteredData = gou.flatMap(item => Object.values(item));\n        const data = {\n          name: filteredData[0],\n          email: filteredData[1],\n          role: filteredData[2],\n          password: filteredData[3]\n        };\n        await apiClient.put(this.url + 'User/update/' + this.id, data);\n        this.$router.push('/AdminUser');\n      } catch (error) {\n        console.error('Error updating user:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Global","apiClient","create","withCredentials","name","props","data","url","users","created","fetchUser","methods","response","get","id","status","user","error","console","updateUser","gou","map","item","email","role","password","filteredData","flatMap","Object","values","put","$router","push"],"sources":["D:\\VScode\\WebProject\\web-project\\src\\views\\UpdateUser.vue"],"sourcesContent":["<template>\r\n    <div class=\"center\">\r\n        <h1>Actualizar Usuario</h1>\r\n        <form @submit.prevent=\"updateUser\">\r\n            <tr v-for=\"user in users\" :key=\"user._id\">\r\n                <label for=\"name\">Nombre:</label>\r\n                <input type=\"text\" id=\"name\" v-model=\"user['name']\" required>\r\n                <br>\r\n                <label for=\"type\">Email:</label>\r\n                <input type=\"text\" id=\"email\" v-model=\"user['email']\" required>\r\n                <br>\r\n                <label for=\"price\">Rol:</label>\r\n                <input type=\"text\" id=\"role\" v-model=\"user['role']\" required>\r\n                <br>\r\n                <br>\r\n                <label for=\"price\">Password:</label>\r\n                <input type=\"text\" id=\"password\" v-model=\"user['password']\" required>\r\n                <br>\r\n                <button type=\"submit\">Actualizar</button>\r\n            </tr>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<style scoped src=\"@/assets/css/AddProductStyle.css\"></style>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Global from '@/Global';\r\n\r\nconst apiClient = axios.create({\r\n withCredentials: true,\r\n});\r\n   \r\nexport default {\r\n    name: \"UpdateUser\",\r\n    props: ['id'],\r\n    data() {\r\n       return {\r\n         url: Global.url,\r\n         users: {},\r\n       };\r\n    },\r\n    created() {\r\n       this.fetchUser();\r\n    },\r\n    methods: {\r\n    async fetchUser() {\r\n        try {\r\n            const response = await apiClient.get(this.url+'User/search?search='+this.id);\r\n            if(response.data.status == 'success'){\r\n                this.users = response.data.user;\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching user:', error);\r\n        }\r\n    },\r\n    async updateUser() {\r\n        try {\r\n            const gou = this.users.map(item => {\r\n            return {\r\n                name: item.name,\r\n                email: item.email,\r\n                role: item.role,\r\n                password: item.password\r\n            };\r\n            });\r\n\r\n            const filteredData = gou.flatMap(item => Object.values(item));\r\n\r\n            const data = {\r\n                name: filteredData[0],\r\n                email: filteredData[1],\r\n                role: filteredData[2],\r\n                password: filteredData[3]\r\n            }\r\n\r\n            await apiClient.put(this.url+'User/update/'+this.id, data);\r\n            this.$router.push('/AdminUser');\r\n        } catch (error) {\r\n            console.error('Error updating user:', error);\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n"],"mappings":";AA2BA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,UAAU;AAE7B,MAAMC,SAAQ,GAAIF,KAAK,CAACG,MAAM,CAAC;EAC9BC,eAAe,EAAE;AAClB,CAAC,CAAC;AAEF,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,IAAIA,CAAA,EAAG;IACJ,OAAO;MACLC,GAAG,EAAEP,MAAM,CAACO,GAAG;MACfC,KAAK,EAAE,CAAC;IACV,CAAC;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACP,IAAI,CAACC,SAAS,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACT,MAAMD,SAASA,CAAA,EAAG;MACd,IAAI;QACA,MAAME,QAAO,GAAI,MAAMX,SAAS,CAACY,GAAG,CAAC,IAAI,CAACN,GAAG,GAAC,qBAAqB,GAAC,IAAI,CAACO,EAAE,CAAC;QAC5E,IAAGF,QAAQ,CAACN,IAAI,CAACS,MAAK,IAAK,SAAS,EAAC;UACjC,IAAI,CAACP,KAAI,GAAII,QAAQ,CAACN,IAAI,CAACU,IAAI;QACnC;MACJ,EAAE,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IACD,MAAME,UAAUA,CAAA,EAAG;MACf,IAAI;QACA,MAAMC,GAAE,GAAI,IAAI,CAACZ,KAAK,CAACa,GAAG,CAACC,IAAG,IAAK;UACnC,OAAO;YACHlB,IAAI,EAAEkB,IAAI,CAAClB,IAAI;YACfmB,KAAK,EAAED,IAAI,CAACC,KAAK;YACjBC,IAAI,EAAEF,IAAI,CAACE,IAAI;YACfC,QAAQ,EAAEH,IAAI,CAACG;UACnB,CAAC;QACD,CAAC,CAAC;QAEF,MAAMC,YAAW,GAAIN,GAAG,CAACO,OAAO,CAACL,IAAG,IAAKM,MAAM,CAACC,MAAM,CAACP,IAAI,CAAC,CAAC;QAE7D,MAAMhB,IAAG,GAAI;UACTF,IAAI,EAAEsB,YAAY,CAAC,CAAC,CAAC;UACrBH,KAAK,EAAEG,YAAY,CAAC,CAAC,CAAC;UACtBF,IAAI,EAAEE,YAAY,CAAC,CAAC,CAAC;UACrBD,QAAQ,EAAEC,YAAY,CAAC,CAAC;QAC5B;QAEA,MAAMzB,SAAS,CAAC6B,GAAG,CAAC,IAAI,CAACvB,GAAG,GAAC,cAAc,GAAC,IAAI,CAACO,EAAE,EAAER,IAAI,CAAC;QAC1D,IAAI,CAACyB,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;MACnC,EAAE,OAAOf,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C;IACJ;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}