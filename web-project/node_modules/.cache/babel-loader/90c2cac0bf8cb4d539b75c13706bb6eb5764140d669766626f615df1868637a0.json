{"ast":null,"code":"import axios from 'axios';\nimport Global from '@/Global';\nconst apiClient = axios.create({\n  withCredentials: true\n});\nexport default {\n  name: 'OrdersPage',\n  data() {\n    return {\n      url: Global.url,\n      orders: []\n    };\n  },\n  created() {\n    this.fetchOrders();\n  },\n  methods: {\n    async fetchOrders() {\n      try {\n        const response = await apiClient.get(this.url + 'Order/orders');\n        this.orders = response.data.products;\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Global","apiClient","create","withCredentials","name","data","url","orders","created","fetchOrders","methods","response","get","products","error","console"],"sources":["D:\\VS Code\\WebProject\\web-project\\src\\views\\OrdersPage.vue"],"sourcesContent":["<template>\r\n<div class=\"grid h-screen min-h-screen w-full overflow-hidden lg:grid-cols-[280px_1fr]\">\r\n  \r\n  <div class=\"flex flex-col\">\r\n    <header class=\"flex h-14 lg:h-[60px] items-center gap-4 border-b bg-gray-100/40 px-6 dark:bg-gray-800/40\">\r\n      <div class=\"flex-1\">\r\n        <h1 class=\"font-semibold text-lg\">Recent Orders</h1>\r\n      </div>\r\n    </header>\r\n    <main class=\"flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-6\">\r\n      <div class=\"border shadow-sm rounded-lg p-2\">\r\n        <div class=\"relative w-full overflow-auto\">\r\n          <table class=\"w-full caption-bottom text-sm\">\r\n            <thead class=\"[&amp;_tr]:border-b\">\r\n              <tr class=\"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\">\r\n                <th class=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0 w-[100px]\">\r\n                  Order ID\r\n                </th>\r\n                <th class=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0\">\r\n                  Producto\r\n                </th>\r\n                <th class=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0\">\r\n                  Cantidad\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"[&amp;_tr:last-child]:border-0\">\r\n              <tr v-for=\"order in orders\" :key=\"order._id\">\r\n                <td>{{ order.idProduct }}</td>\r\n                <td>Hola</td>\r\n                <td>{{ order.amount}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Global from '@/Global';\r\n\r\nconst apiClient = axios.create({\r\n  withCredentials: true,\r\n});\r\n\r\nexport default {\r\n    name: 'OrdersPage',\r\n    data() {\r\n       return {\r\n         url: Global.url,\r\n         orders: [],\r\n      };\r\n    },\r\n    created() {\r\n       this.fetchOrders();\r\n    },\r\n    methods: {\r\n      async fetchOrders() {\r\n        try {\r\n          const response = await apiClient.get(this.url+'Order/orders');\r\n          this.orders = response.data.products;\r\n        } catch (error) {\r\n          console.error('Error fetching products:', error);\r\n        }\r\n      }\r\n    }\r\n}\r\n</script>"],"mappings":"AA0CA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,UAAU;AAE7B,MAAMC,SAAQ,GAAIF,KAAK,CAACG,MAAM,CAAC;EAC7BC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEF,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACJ,OAAO;MACLC,GAAG,EAAEN,MAAM,CAACM,GAAG;MACfC,MAAM,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACP,IAAI,CAACC,WAAW,CAAC,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMV,SAAS,CAACW,GAAG,CAAC,IAAI,CAACN,GAAG,GAAC,cAAc,CAAC;QAC7D,IAAI,CAACC,MAAK,GAAII,QAAQ,CAACN,IAAI,CAACQ,QAAQ;MACtC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;EACF;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}