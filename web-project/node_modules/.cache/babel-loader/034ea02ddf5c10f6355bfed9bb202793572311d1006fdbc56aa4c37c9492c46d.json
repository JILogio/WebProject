{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport Global from '@/Global';\nconst apiClient = axios.create({\n  withCredentials: true\n});\nexport default {\n  name: 'RealizarPedido',\n  props: ['orders', 'total'],\n  data() {\n    return {\n      url: Global.url,\n      location: {\n        street: '',\n        district: '',\n        postal: ''\n      },\n      ordersCopy: {},\n      invoice: {\n        idOrder: {},\n        date: '',\n        totalValue: 0,\n        idLocation: ''\n      }\n    };\n  },\n  created() {\n    this.ordersCopy = JSON.parse(this.orders);\n  },\n  methods: {\n    async submitForm() {\n      try {\n        //Obetner fecha actual en el formato correcto\n        let hoy = new Date();\n        let dia = hoy.getDate();\n        let mes = hoy.getMonth() + 1;\n        let anio = hoy.getFullYear();\n        let diaFormateado = String(dia).padStart(2, '0');\n        let mesFormateado = String(mes).padStart(2, '0');\n        let anioFormateado = String(anio);\n        let fechaFormateada = `${diaFormateado}/${mesFormateado}/${anioFormateado}`;\n\n        //Guardar primeramente la ubicación para obtener su id\n        const locationResult = await apiClient.post(this.url + 'Location/save', this.location);\n        if (locationResult.data.status != 'error') {\n          const locationID = locationResult.data._id;\n          this.invoice = {\n            idOrder: this.ordersCopy,\n            date: fechaFormateada,\n            totalValue: this.total,\n            idLocation: locationID\n          };\n          await apiClient.post(this.url + 'Invoice/save', this.invoice);\n          alert('Orden realizado correctamente');\n          this.$router.push('/ProductPage');\n        } else {\n          alert('Error al ingresar la ubicación');\n        }\n      } catch (error) {\n        console.error('Error submitting form:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Global","apiClient","create","withCredentials","name","props","data","url","location","street","district","postal","ordersCopy","invoice","idOrder","date","totalValue","idLocation","created","JSON","parse","orders","methods","submitForm","hoy","Date","dia","getDate","mes","getMonth","anio","getFullYear","diaFormateado","String","padStart","mesFormateado","anioFormateado","fechaFormateada","locationResult","post","status","locationID","_id","total","alert","$router","push","error","console"],"sources":["D:\\VS Code\\WebProject\\web-project\\src\\views\\RealizarPedido.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <form @submit.prevent=\"submitForm\">\r\n            <label for=\"street\">Calle:</label>\r\n            <input type=\"text\" id=\"street\" v-model=\"location.street\" required>\r\n            \r\n            <label for=\"district\">Distrito:</label>\r\n            <input type=\"text\" id=\"district\" v-model=\"location.district\" required>\r\n            \r\n            <label for=\"postal\">Código postal:</label>\r\n            <input type=\"text\" id=\"postal\" v-model=\"location.postal\" required>\r\n\r\n            <button type=\"submit\">Enviar</button>\r\n        </form>\r\n    </div>\r\n</template>\r\n    \r\n<script>\r\nimport axios from 'axios';\r\nimport Global from '@/Global';\r\n    \r\nconst apiClient = axios.create({\r\n    withCredentials: true,\r\n});\r\n    \r\nexport default {\r\n    name: 'RealizarPedido',\r\n    props: ['orders','total'],\r\n    data() {\r\n        return {\r\n            url: Global.url,\r\n            location: {\r\n                street: '',\r\n                district: '',\r\n                postal: '',\r\n            },\r\n            ordersCopy: {},\r\n            invoice: {\r\n                idOrder: {},\r\n                date: '',\r\n                totalValue: 0,\r\n                idLocation: ''\r\n            },\r\n          };\r\n        },\r\n    created(){\r\n        this.ordersCopy = JSON.parse(this.orders);\r\n    },\r\n    methods: {\r\n    async submitForm() {\r\n        try {\r\n            //Obetner fecha actual en el formato correcto\r\n            let hoy = new Date();\r\n            let dia = hoy.getDate();\r\n            let mes = hoy.getMonth() + 1;\r\n            let anio = hoy.getFullYear();\r\n            let diaFormateado = String(dia).padStart(2, '0');\r\n            let mesFormateado = String(mes).padStart(2, '0');\r\n            let anioFormateado = String(anio);\r\n\r\n            let fechaFormateada = `${diaFormateado}/${mesFormateado}/${anioFormateado}`;\r\n\r\n            //Guardar primeramente la ubicación para obtener su id\r\n            const locationResult = await apiClient.post(this.url+'Location/save', this.location);\r\n\r\n            if(locationResult.data.status != 'error'){\r\n                const locationID = locationResult.data._id;\r\n                this.invoice = {\r\n                    idOrder: this.ordersCopy,\r\n                    date: fechaFormateada,\r\n                    totalValue: this.total,\r\n                    idLocation: locationID\r\n                }\r\n\r\n                await apiClient.post(this.url+'Invoice/save',this.invoice);\r\n                alert('Orden realizado correctamente');\r\n                this.$router.push('/ProductPage');\r\n            } else {\r\n                alert('Error al ingresar la ubicación');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error submitting form:', error);\r\n        }\r\n      }\r\n    }\r\n}\r\n</script>"],"mappings":";AAkBA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,UAAU;AAE7B,MAAMC,SAAQ,GAAIF,KAAK,CAACG,MAAM,CAAC;EAC3BC,eAAe,EAAE;AACrB,CAAC,CAAC;AAEF,eAAe;EACXC,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE,CAAC,QAAQ,EAAC,OAAO,CAAC;EACzBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,GAAG,EAAEP,MAAM,CAACO,GAAG;MACfC,QAAQ,EAAE;QACNC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE;MACZ,CAAC;MACDC,UAAU,EAAE,CAAC,CAAC;MACdC,OAAO,EAAE;QACLC,OAAO,EAAE,CAAC,CAAC;QACXC,IAAI,EAAE,EAAE;QACRC,UAAU,EAAE,CAAC;QACbC,UAAU,EAAE;MAChB;IACF,CAAC;EACH,CAAC;EACLC,OAAOA,CAAA,EAAE;IACL,IAAI,CAACN,UAAS,GAAIO,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,MAAM,CAAC;EAC7C,CAAC;EACDC,OAAO,EAAE;IACT,MAAMC,UAAUA,CAAA,EAAG;MACf,IAAI;QACA;QACA,IAAIC,GAAE,GAAI,IAAIC,IAAI,CAAC,CAAC;QACpB,IAAIC,GAAE,GAAIF,GAAG,CAACG,OAAO,CAAC,CAAC;QACvB,IAAIC,GAAE,GAAIJ,GAAG,CAACK,QAAQ,CAAC,IAAI,CAAC;QAC5B,IAAIC,IAAG,GAAIN,GAAG,CAACO,WAAW,CAAC,CAAC;QAC5B,IAAIC,aAAY,GAAIC,MAAM,CAACP,GAAG,CAAC,CAACQ,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAChD,IAAIC,aAAY,GAAIF,MAAM,CAACL,GAAG,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAChD,IAAIE,cAAa,GAAIH,MAAM,CAACH,IAAI,CAAC;QAEjC,IAAIO,eAAc,GAAK,GAAEL,aAAc,IAAGG,aAAc,IAAGC,cAAe,EAAC;;QAE3E;QACA,MAAME,cAAa,GAAI,MAAMrC,SAAS,CAACsC,IAAI,CAAC,IAAI,CAAChC,GAAG,GAAC,eAAe,EAAE,IAAI,CAACC,QAAQ,CAAC;QAEpF,IAAG8B,cAAc,CAAChC,IAAI,CAACkC,MAAK,IAAK,OAAO,EAAC;UACrC,MAAMC,UAAS,GAAIH,cAAc,CAAChC,IAAI,CAACoC,GAAG;UAC1C,IAAI,CAAC7B,OAAM,GAAI;YACXC,OAAO,EAAE,IAAI,CAACF,UAAU;YACxBG,IAAI,EAAEsB,eAAe;YACrBrB,UAAU,EAAE,IAAI,CAAC2B,KAAK;YACtB1B,UAAU,EAAEwB;UAChB;UAEA,MAAMxC,SAAS,CAACsC,IAAI,CAAC,IAAI,CAAChC,GAAG,GAAC,cAAc,EAAC,IAAI,CAACM,OAAO,CAAC;UAC1D+B,KAAK,CAAC,+BAA+B,CAAC;UACtC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;QACrC,OAAO;UACHF,KAAK,CAAC,gCAAgC,CAAC;QAC3C;MACJ,EAAE,OAAOG,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACF;EACF;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}