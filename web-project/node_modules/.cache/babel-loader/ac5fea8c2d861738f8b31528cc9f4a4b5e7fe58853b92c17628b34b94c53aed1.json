{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MainHeaderPage = _resolveComponent(\"MainHeaderPage\");\n  const _component_HeaderLoginPage = _resolveComponent(\"HeaderLoginPage\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_ctx.content.role == 'client' ? (_openBlock(), _createBlock(_component_MainHeaderPage, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_HeaderLoginPage), _createTextVNode(\" \" + _toDisplayString($setup.role) + \" \", 1 /* TEXT */), _createVNode(_component_router_view)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_ctx","content","role","_createBlock","_component_MainHeaderPage","key","_createVNode","_component_HeaderLoginPage","_toDisplayString","$setup","_component_router_view"],"sources":["D:\\VS Code\\WebProject\\web-project\\src\\App.vue"],"sourcesContent":["<template>\r\n  <MainHeaderPage v-if=\"content.role == 'client'\"/>\r\n  <HeaderLoginPage/>\r\n  {{ role }}\r\n  <router-view/>\r\n</template>\r\n\r\n<script>\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\r\nimport HeaderLoginPage from './components/HeaderLoginPage.vue';\r\nimport MainHeaderPage from './components/MainHeaderPage.vue';\r\n\r\nimport {onMounted,ref} from 'vue';\r\nimport axios from 'axios';\r\nimport Global from '@/Global';\r\n\r\nexport default {\r\n    name: \"App\",\r\n    components: { HeaderLoginPage,MainHeaderPage },\r\n    setup() {\r\n      const url = Global.url;\r\n      const role = ref('')\r\n\r\n      onMounted(async () =>{\r\n        try{\r\n          const response = await axios.get(`${url}user`, {\r\n                      headers: { 'Content-Type': 'application/json' },\r\n                      withCredentials: true\r\n                  });\r\n\r\n          const content = response.data;\r\n          role.value = `${content.role}`\r\n        } catch(err){\r\n          console.log(err)\r\n        }\r\n      });\r\n\r\n      return {\r\n        role\r\n      }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n@import './assets/css/styles.css';\r\nbody {\r\n  height: 100%;\r\n}\r\n\r\n.form-signin {\r\n  max-width: 330px;\r\n  padding: 1rem;\r\n}\r\n\r\n.form-signin .form-floating:focus-within {\r\n  z-index: 2;\r\n}\r\n\r\n.form-signin input[type=\"email\"] {\r\n  margin-bottom: -1px;\r\n  border-bottom-right-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n}\r\n\r\n.form-signin input[type=\"password\"] {\r\n  margin-bottom: 10px;\r\n  border-top-left-radius: 0;\r\n  border-top-right-radius: 0;\r\n}\r\n</style>\r\n"],"mappings":";;;;;6DACwBA,IAAA,CAAAC,OAAO,CAACC,IAAI,gB,cAAlCC,YAAA,CAAiDC,yBAAA;IAAAC,GAAA;EAAA,M,mCACjDC,YAAA,CAAkBC,0BAAA,G,iBAAA,GAClB,GAAAC,gBAAA,CAAGC,MAAA,CAAAP,IAAI,IAAG,GACV,iBAAAI,YAAA,CAAcI,sBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}