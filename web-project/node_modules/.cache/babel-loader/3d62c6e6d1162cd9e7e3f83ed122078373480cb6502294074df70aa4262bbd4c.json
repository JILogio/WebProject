{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport Global from '@/Global';\nconst apiClient = axios.create({\n  withCredentials: true\n});\nexport default {\n  name: 'OrdersPage',\n  data() {\n    return {\n      url: Global.url,\n      orders: [],\n      total: 0,\n      user: {}\n    };\n  },\n  async created() {\n    await this.fetchOrders();\n  },\n  methods: {\n    async fetchUser() {\n      try {\n        const response = await axios.get(`${this.url}User/user`, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        const content = response.data;\n        this.user = `${content._id}`;\n      } catch (error) {\n        console.error('Error fetching user:', error);\n      }\n    },\n    async fetchOrders() {\n      try {\n        const response = await apiClient.get(this.url + 'Order/orders');\n        this.orders = response.data.orders;\n        for (let i = 0; i < this.orders.length; i++) {\n          const productResponse = await apiClient.get(this.url + 'Product/product?search=' + this.orders[i].idProduct);\n          this.orders[i].productName = productResponse.data.product[0].name;\n        }\n        for (let i = 0; i < this.orders.length; i++) {\n          const productResponse = await apiClient.get(this.url + 'Product/product?search=' + this.orders[i].idProduct);\n          this.orders[i].productPrice = productResponse.data.product[0].price;\n        }\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    },\n    async deleteOrder(id) {\n      try {\n        await apiClient.delete(this.url + 'Order/delete/' + id);\n        this.orders = this.orders.filter(order => order._id !== id);\n      } catch (error) {\n        console.error('Error deleting order:', error);\n      }\n    },\n    isToday(dateString) {\n      const orderDate = new Date(dateString);\n      const today = new Date();\n      return orderDate.toDateString() === today.toDateString();\n    },\n    async pedir() {\n      if (Array.isArray(this.orders)) {\n        const orderIds = this.orders.map(order => order._id);\n        for (let i = 0; i < this.orders.length; i++) {\n          this.total += this.orders[i].productPrice * this.orders[i].amount;\n        }\n        this.$router.push({\n          name: 'RealizarPedido',\n          params: {\n            orders: JSON.stringify(orderIds),\n            total: this.total\n          }\n        });\n      } else {\n        alert('No hay ordenes realizadas');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Global","apiClient","create","withCredentials","name","data","url","orders","total","user","created","fetchOrders","methods","fetchUser","response","get","headers","content","_id","error","console","i","length","productResponse","idProduct","productName","product","productPrice","price","deleteOrder","id","delete","filter","order","isToday","dateString","orderDate","Date","today","toDateString","pedir","Array","isArray","orderIds","map","amount","$router","push","params","JSON","stringify","alert"],"sources":["D:\\VS Code\\WebProject\\web-project\\src\\views\\OrdersPage.vue"],"sourcesContent":["<template>\r\n<div class=\"grid h-screen min-h-screen w-full overflow-hidden lg:grid-cols-[280px_1fr]\">\r\n  \r\n  <div class=\"flex flex-col\">\r\n    <header class=\"flex h-14 lg:h-[60px] items-center gap-4 border-b bg-gray-100/40 px-6 dark:bg-gray-800/40\">\r\n      <div class=\"flex-1\">\r\n        <h1 class=\"font-semibold text-lg\">Recent Orders</h1>\r\n      </div>\r\n    </header>\r\n    <main class=\"flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-6\">\r\n      <div class=\"border shadow-sm rounded-lg p-2\">\r\n        <div class=\"relative w-full overflow-auto\">\r\n          <table class=\"w-full caption-bottom text-sm\">\r\n            <thead class=\"[&amp;_tr]:border-b\">\r\n              <tr class=\"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\">\r\n                <th class=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0 w-[100px]\">\r\n                  Order ID\r\n                </th>\r\n                <th class=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0\">\r\n                  Producto\r\n                </th>\r\n                <th class=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0\">\r\n                  Cantidad\r\n                </th>\r\n                <th class=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0\">\r\n                  Precio\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"[&amp;_tr:last-child]:border-0\">\r\n              <template v-for=\"order in orders\" :key=\"order._id\">\r\n                <tr class=\"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\" v-if=\"order.idUser === this.user\">\r\n                  <p>{{this.user}}</p>\r\n                  <td class=\"p-4 align-middle [&amp;:has([role=checkbox])]:pr-0 font-medium\">{{ order._id }}</td>\r\n                  <td class=\"p-4 align-middle [&amp;:has([role=checkbox])]:pr-0\">{{ order.productName }}</td>\r\n                  <td class=\"p-4 align-middle [&amp;:has([role=checkbox])]:pr-0\">{{ order.amount}}</td>\r\n                  <td class=\"p-4 align-middle [&amp;:has([role=checkbox])]:pr-0\">{{ order.productPrice}}</td>\r\n                  <td>\r\n                    <button @click=\"deleteOrder(order._id)\">Cancelar</button>\r\n                  </td>\r\n                </tr>\r\n              </template>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <button @click=\"pedir\">Pedir</button>\r\n    </main>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Global from '@/Global';\r\n\r\nconst apiClient = axios.create({\r\n  withCredentials: true,\r\n});\r\n\r\nexport default {\r\n    name: 'OrdersPage',\r\n    data() {\r\n       return {\r\n         url: Global.url,\r\n         orders: [],\r\n         total: 0,\r\n         user: {}\r\n      };\r\n    },\r\n    async created() {\r\n       await this.fetchOrders();\r\n    },\r\n    methods: {\r\n      async fetchUser() {\r\n        try {\r\n          const response = await axios.get(`${this.url}User/user`, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            withCredentials: true\r\n          });\r\n\r\n          const content = response.data;\r\n          this.user = `${content._id}`;\r\n        } catch (error) {\r\n          console.error('Error fetching user:', error);\r\n        }\r\n      },\r\n      async fetchOrders() {\r\n        try {\r\n            const response = await apiClient.get(this.url+'Order/orders');\r\n            this.orders = response.data.orders;\r\n\r\n            for (let i = 0; i < this.orders.length; i++) {\r\n              const productResponse = await apiClient.get(this.url+'Product/product?search='+this.orders[i].idProduct);\r\n              this.orders[i].productName = productResponse.data.product[0].name;\r\n            }\r\n\r\n            for (let i = 0; i < this.orders.length; i++) {\r\n              const productResponse = await apiClient.get(this.url+'Product/product?search='+this.orders[i].idProduct);\r\n              this.orders[i].productPrice = productResponse.data.product[0].price;\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching products:', error);\r\n        }\r\n      },\r\n      async deleteOrder(id) {\r\n        try {\r\n          await apiClient.delete(this.url+'Order/delete/'+id);\r\n          this.orders = this.orders.filter(order => order._id !== id);\r\n        } catch (error) {\r\n          console.error('Error deleting order:', error);\r\n        }\r\n      },\r\n      isToday(dateString) {\r\n          const orderDate = new Date(dateString);\r\n          const today = new Date();\r\n          return orderDate.toDateString() === today.toDateString();\r\n      },\r\n      async pedir() {\r\n        if(Array.isArray(this.orders)){\r\n          const orderIds = this.orders.map(order => order._id);\r\n\r\n          for (let i = 0; i < this.orders.length; i++) {\r\n            this.total += this.orders[i].productPrice * this.orders[i].amount\r\n          }\r\n\r\n          this.$router.push({name: 'RealizarPedido', params: { orders: JSON.stringify(orderIds), total: this.total }});\r\n        } else{\r\n          alert('No hay ordenes realizadas')\r\n        }\r\n      }\r\n    }\r\n}\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}