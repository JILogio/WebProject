{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-63611970\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Productos\", -1));\nconst _hoisted_2 = {\n  class: \"grid-container\"\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"card\",\n      key: product._id\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(product.name), 1), _createElementVNode(\"p\", null, \"Precio: $\" + _toDisplayString(product.price), 1), _createElementVNode(\"input\", {\n      type: \"number\",\n      ref_for: true,\n      ref: 'input-' + product._id\n    }, null, 512), _createElementVNode(\"button\", {\n      onClick: $event => $options.orderProduct(product._id, $event)\n    }, \"Order\", 8, _hoisted_3)]);\n  }), 128))])], 64);\n}","map":{"version":3,"names":["_createElementVNode","class","_hoisted_1","_hoisted_2","_createElementBlock","_Fragment","_renderList","$data","products","product","key","_id","_toDisplayString","name","price","type","ref","onClick","$event","$options","orderProduct","_hoisted_3"],"sources":["D:\\VScode\\WebProject\\web-project\\src\\views\\ProductPage.vue"],"sourcesContent":["<template>\r\n    <h1>Productos</h1>\r\n    <div class=\"grid-container\">\r\n        <div class=\"card\" v-for=\"product in products\" :key=\"product._id\">\r\n            <h2>{{ product.name }}</h2>\r\n            <p>Precio: ${{ product.price }}</p>\r\n            <input type=\"number\" :ref=\"'input-'+product._id\">\r\n            <button @click=\"orderProduct(product._id, $event)\">Order</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped src=\"@/assets/css/ProductStyle.css\"></style>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Global from '../Global'\r\n\r\nconst apiClient = axios.create({\r\n  headers: { 'Content-Type': 'application/json' },\r\n  withCredentials: true,\r\n});\r\n\r\nexport default {\r\n    name: 'ProductPage',\r\n\r\n    mounted(){\r\n        this.getProductos();\r\n    },\r\n    data(){\r\n        return {\r\n            url: Global.url,\r\n            products: {},\r\n        }\r\n    },\r\n    methods: {\r\n        getProductos(){\r\n            apiClient.get(this.url+'Product/products')\r\n                .then(res => {\r\n                    if(res.data.status == 'success'){\r\n                        this.products = res.data.products;\r\n                    }\r\n                })\r\n                .catch (err => {\r\n                    console.log(err)\r\n                })\r\n            },\r\n        async orderProduct(id, event) {\r\n            event.preventDefault();\r\n            try {\r\n            let data = this.$refs['input-'+id][0].value;\r\n            if (data > 0 || isNaN(data)){\r\n                const response = await axios.get(`${this.url}User/user`, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    withCredentials: true\r\n                });\r\n                const content = response.data;\r\n                \r\n                const order = {\r\n                    idUser: content._id,\r\n                    idProduct: id,\r\n                    amount: data\r\n                }\r\n\r\n                const result = await apiClient.post(this.url+'Order/save',order)\r\n                if(result.data.status == 'success'){\r\n                    alert('Order realizada');\r\n                    this.$refs['input-'+id][0].value = '';\r\n                }\r\n            }\r\n            } catch (err){\r\n                alert('Error al realizar el pedido');\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":";;gEACIA,mBAAA,CAAkB,YAAd,WAAS;;EACRC,KAAK,EAAC;AAAgB;;;6DAD3BC,UAAkB,EAClBF,mBAAA,CAOM,OAPNG,UAOM,I,kBANFC,mBAAA,CAKMC,SAAA,QAAAC,WAAA,CAL8BC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAhCL,mBAAA,CAKM;MALDH,KAAK,EAAC,MAAM;MAA8BS,GAAG,EAAED,OAAO,CAACE;QACxDX,mBAAA,CAA2B,YAAAY,gBAAA,CAApBH,OAAO,CAACI,IAAI,OACnBb,mBAAA,CAAmC,WAAhC,WAAS,GAAAY,gBAAA,CAAGH,OAAO,CAACK,KAAK,OAC5Bd,mBAAA,CAAiD;MAA1Ce,IAAI,EAAC,QAAQ;;MAAEC,GAAG,aAAWP,OAAO,CAACE;mBAC5CX,mBAAA,CAAiE;MAAxDiB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,YAAY,CAACX,OAAO,CAACE,GAAG,EAAEO,MAAM;OAAG,OAAK,KAAAG,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}